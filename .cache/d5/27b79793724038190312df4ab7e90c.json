{"id":"scripts/loginCall.js","dependencies":[{"name":"D:\\Bettle-app\\package.json","includedInParent":true,"mtime":1624210618835},{"name":"axios","loc":{"line":1,"column":18},"parent":"D:\\Bettle-app\\src\\scripts\\loginCall.js","resolved":"D:\\Bettle-app\\node_modules\\axios\\index.js"},{"name":"regenerator-runtime/runtime","loc":{"line":2,"column":7},"parent":"D:\\Bettle-app\\src\\scripts\\loginCall.js","resolved":"D:\\Bettle-app\\node_modules\\regenerator-runtime\\runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _default(_x, _x2) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(name, pass) {\n    var resp;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _axios.default.get('http://localhost:3000/users/login', {\n              params: {\n                \"name\": name,\n                \"password\": pass\n              }\n            }).then(function (res) {\n              return res;\n            }).catch(function (e) {\n              console.log(e);\n            });\n\n          case 2:\n            resp = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"scripts/loginCall.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"scripts/loginCall.js","original":{"line":2,"column":0}},{"generated":{"line":23,"column":65},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"name":"name","generated":{"line":23,"column":82},"source":"scripts/loginCall.js","original":{"line":4,"column":30}},{"generated":{"line":23,"column":86},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"name":"pass","generated":{"line":23,"column":88},"source":"scripts/loginCall.js","original":{"line":4,"column":35}},{"generated":{"line":23,"column":92},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":24,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":25,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":26,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":27,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":28,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":29,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":30,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"name":"axios","generated":{"line":30,"column":19},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"name":"get","generated":{"line":30,"column":34},"source":"scripts/loginCall.js","original":{"line":6,"column":28}},{"generated":{"line":30,"column":37},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"generated":{"line":30,"column":38},"source":"scripts/loginCall.js","original":{"line":6,"column":32}},{"generated":{"line":30,"column":73},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"generated":{"line":30,"column":75},"source":"scripts/loginCall.js","original":{"line":6,"column":68}},{"name":"params","generated":{"line":31,"column":0},"source":"scripts/loginCall.js","original":{"line":7,"column":4}},{"name":"params","generated":{"line":31,"column":14},"source":"scripts/loginCall.js","original":{"line":7,"column":4}},{"generated":{"line":31,"column":20},"source":"scripts/loginCall.js","original":{"line":7,"column":10}},{"generated":{"line":31,"column":22},"source":"scripts/loginCall.js","original":{"line":7,"column":11}},{"generated":{"line":32,"column":0},"source":"scripts/loginCall.js","original":{"line":8,"column":6}},{"name":"name","generated":{"line":32,"column":24},"source":"scripts/loginCall.js","original":{"line":8,"column":13}},{"generated":{"line":32,"column":28},"source":"scripts/loginCall.js","original":{"line":7,"column":11}},{"generated":{"line":33,"column":0},"source":"scripts/loginCall.js","original":{"line":9,"column":6}},{"name":"pass","generated":{"line":33,"column":28},"source":"scripts/loginCall.js","original":{"line":9,"column":17}},{"generated":{"line":34,"column":0},"source":"scripts/loginCall.js","original":{"line":7,"column":11}},{"generated":{"line":35,"column":0},"source":"scripts/loginCall.js","original":{"line":6,"column":68}},{"generated":{"line":35,"column":13},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"name":"then","generated":{"line":35,"column":15},"source":"scripts/loginCall.js","original":{"line":11,"column":5}},{"generated":{"line":35,"column":19},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"generated":{"line":35,"column":20},"source":"scripts/loginCall.js","original":{"line":11,"column":10}},{"name":"res","generated":{"line":35,"column":30},"source":"scripts/loginCall.js","original":{"line":11,"column":10}},{"generated":{"line":35,"column":33},"source":"scripts/loginCall.js","original":{"line":11,"column":13}},{"generated":{"line":36,"column":0},"source":"scripts/loginCall.js","original":{"line":11,"column":13}},{"name":"res","generated":{"line":36,"column":21},"source":"scripts/loginCall.js","original":{"line":11,"column":17}},{"generated":{"line":36,"column":24},"source":"scripts/loginCall.js","original":{"line":11,"column":13}},{"generated":{"line":37,"column":0},"source":"scripts/loginCall.js","original":{"line":11,"column":13}},{"generated":{"line":37,"column":13},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"name":"catch","generated":{"line":37,"column":15},"source":"scripts/loginCall.js","original":{"line":11,"column":22}},{"generated":{"line":37,"column":20},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"generated":{"line":37,"column":21},"source":"scripts/loginCall.js","original":{"line":11,"column":28}},{"name":"e","generated":{"line":37,"column":31},"source":"scripts/loginCall.js","original":{"line":11,"column":28}},{"generated":{"line":37,"column":32},"source":"scripts/loginCall.js","original":{"line":11,"column":29}},{"generated":{"line":37,"column":34},"source":"scripts/loginCall.js","original":{"line":11,"column":33}},{"name":"console","generated":{"line":38,"column":0},"source":"scripts/loginCall.js","original":{"line":11,"column":34}},{"name":"console","generated":{"line":38,"column":14},"source":"scripts/loginCall.js","original":{"line":11,"column":34}},{"generated":{"line":38,"column":21},"source":"scripts/loginCall.js","original":{"line":11,"column":41}},{"name":"log","generated":{"line":38,"column":22},"source":"scripts/loginCall.js","original":{"line":11,"column":42}},{"generated":{"line":38,"column":25},"source":"scripts/loginCall.js","original":{"line":11,"column":34}},{"name":"e","generated":{"line":38,"column":26},"source":"scripts/loginCall.js","original":{"line":11,"column":46}},{"generated":{"line":38,"column":27},"source":"scripts/loginCall.js","original":{"line":11,"column":34}},{"generated":{"line":39,"column":0},"source":"scripts/loginCall.js","original":{"line":11,"column":49}},{"generated":{"line":39,"column":13},"source":"scripts/loginCall.js","original":{"line":6,"column":22}},{"generated":{"line":39,"column":14},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":41,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"name":"resp","generated":{"line":42,"column":0},"source":"scripts/loginCall.js","original":{"line":6,"column":9}},{"name":"resp","generated":{"line":42,"column":12},"source":"scripts/loginCall.js","original":{"line":6,"column":9}},{"generated":{"line":42,"column":16},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":44,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":45,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":46,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":47,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":48,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":49,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}},{"generated":{"line":50,"column":0},"source":"scripts/loginCall.js","original":{"line":4,"column":15}}],"sources":{"scripts/loginCall.js":"import axios from 'axios';\r\nimport 'regenerator-runtime/runtime';\r\n\r\nexport default async function(name,pass){\r\n\r\n   const resp = await axios.get('http://localhost:3000/users/login',{\r\n    params:{\r\n      \"name\":name,\r\n      \"password\":pass\r\n    }\r\n  }).then(res => res).catch(e => {console.log(e)});\r\n\r\n}\r\n\r\n"},"lineCount":null}},"error":null,"hash":"0c9db776e6e092b93cbfabb6a2fb1e65","cacheData":{"env":{}}}